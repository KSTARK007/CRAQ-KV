// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: packet.capnp

#include "packet.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<26> b_d1a6b028d23ecc19 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     25, 204,  62, 210,  40, 176, 166, 209,
     13,   0,   0,   0,   2,   0,   0,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  82, 101, 115,
    112, 111, 110, 115, 101,  84, 121, 112,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 107,   0,   0,   0,   0,   0,   0,
    105, 110, 118,  97, 108, 105, 100,   0, }
};
::capnp::word const* const bp_d1a6b028d23ecc19 = b_d1a6b028d23ecc19.words;
#if !CAPNP_LITE
static const uint16_t m_d1a6b028d23ecc19[] = {1, 0};
const ::capnp::_::RawSchema s_d1a6b028d23ecc19 = {
  0xd1a6b028d23ecc19, b_d1a6b028d23ecc19.words, 26, nullptr, m_d1a6b028d23ecc19,
  0, 2, nullptr, nullptr, nullptr, { &s_d1a6b028d23ecc19, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(ResponseType_d1a6b028d23ecc19, d1a6b028d23ecc19);
static const ::capnp::_::AlignedData<47> b_eea585a8e0273b7b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    123,  59,  39, 224, 168, 133, 165, 238,
     13,   0,   0,   0,   1,   0,   0,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  80, 117, 116,
     82, 101, 113, 117, 101, 115, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_eea585a8e0273b7b = b_eea585a8e0273b7b.words;
#if !CAPNP_LITE
static const uint16_t m_eea585a8e0273b7b[] = {0, 1};
static const uint16_t i_eea585a8e0273b7b[] = {0, 1};
const ::capnp::_::RawSchema s_eea585a8e0273b7b = {
  0xeea585a8e0273b7b, b_eea585a8e0273b7b.words, 47, nullptr, m_eea585a8e0273b7b,
  0, 2, i_eea585a8e0273b7b, nullptr, nullptr, { &s_eea585a8e0273b7b, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_e49824f5cff34d68 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    104,  77, 243, 207, 245,  36, 152, 228,
     13,   0,   0,   0,   1,   0,   1,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  80, 117, 116,
     82, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     25, 204,  62, 210,  40, 176, 166, 209,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e49824f5cff34d68 = b_e49824f5cff34d68.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e49824f5cff34d68[] = {
  &s_d1a6b028d23ecc19,
};
static const uint16_t m_e49824f5cff34d68[] = {0};
static const uint16_t i_e49824f5cff34d68[] = {0};
const ::capnp::_::RawSchema s_e49824f5cff34d68 = {
  0xe49824f5cff34d68, b_e49824f5cff34d68.words, 34, d_e49824f5cff34d68, m_e49824f5cff34d68,
  1, 1, i_e49824f5cff34d68, nullptr, nullptr, { &s_e49824f5cff34d68, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_a51a80a5d0621603 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      3,  22,  98, 208, 165, 128,  26, 165,
     13,   0,   0,   0,   1,   0,   0,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  71, 101, 116,
     82, 101, 113, 117, 101, 115, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a51a80a5d0621603 = b_a51a80a5d0621603.words;
#if !CAPNP_LITE
static const uint16_t m_a51a80a5d0621603[] = {0};
static const uint16_t i_a51a80a5d0621603[] = {0};
const ::capnp::_::RawSchema s_a51a80a5d0621603 = {
  0xa51a80a5d0621603, b_a51a80a5d0621603.words, 32, nullptr, m_a51a80a5d0621603,
  0, 1, i_a51a80a5d0621603, nullptr, nullptr, { &s_a51a80a5d0621603, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_9c293df3f2a02a07 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      7,  42, 160, 242, 243,  61,  41, 156,
     13,   0,   0,   0,   1,   0,   1,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  71, 101, 116,
     82, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     25, 204,  62, 210,  40, 176, 166, 209,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9c293df3f2a02a07 = b_9c293df3f2a02a07.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9c293df3f2a02a07[] = {
  &s_d1a6b028d23ecc19,
};
static const uint16_t m_9c293df3f2a02a07[] = {0, 1};
static const uint16_t i_9c293df3f2a02a07[] = {0, 1};
const ::capnp::_::RawSchema s_9c293df3f2a02a07 = {
  0x9c293df3f2a02a07, b_9c293df3f2a02a07.words, 49, d_9c293df3f2a02a07, m_9c293df3f2a02a07,
  1, 2, i_9c293df3f2a02a07, nullptr, nullptr, { &s_9c293df3f2a02a07, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_eb67a0eae928bb61 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     97, 187,  40, 233, 234, 160, 103, 235,
     13,   0,   0,   0,   1,   0,   3,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  82, 100, 109,
     97,  83, 101, 116, 117, 112,  82, 101,
    113, 117, 101, 115, 116,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    109,  97,  99, 104, 105, 110, 101,  73,
    110, 100, 101, 120,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 114, 116,  65, 100, 100,
    114, 101, 115, 115,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 122, 101,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_eb67a0eae928bb61 = b_eb67a0eae928bb61.words;
#if !CAPNP_LITE
static const uint16_t m_eb67a0eae928bb61[] = {0, 2, 1};
static const uint16_t i_eb67a0eae928bb61[] = {0, 1, 2};
const ::capnp::_::RawSchema s_eb67a0eae928bb61 = {
  0xeb67a0eae928bb61, b_eb67a0eae928bb61.words, 65, nullptr, m_eb67a0eae928bb61,
  0, 3, i_eb67a0eae928bb61, nullptr, nullptr, { &s_eb67a0eae928bb61, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_d8f2d86285d59919 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     25, 153, 213, 133,  98, 216, 242, 216,
     13,   0,   0,   0,   1,   0,   1,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  82, 100, 109,
     97,  83, 101, 116, 117, 112,  82, 101,
    115, 112, 111, 110, 115, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     25, 204,  62, 210,  40, 176, 166, 209,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d8f2d86285d59919 = b_d8f2d86285d59919.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d8f2d86285d59919[] = {
  &s_d1a6b028d23ecc19,
};
static const uint16_t m_d8f2d86285d59919[] = {0};
static const uint16_t i_d8f2d86285d59919[] = {0};
const ::capnp::_::RawSchema s_d8f2d86285d59919 = {
  0xd8f2d86285d59919, b_d8f2d86285d59919.words, 34, d_d8f2d86285d59919, m_d8f2d86285d59919,
  1, 1, i_d8f2d86285d59919, nullptr, nullptr, { &s_d8f2d86285d59919, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<25> b_b36ecfe36db7d4ef = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    239, 212, 183, 109, 227, 207, 110, 179,
     13,   0,   0,   0,   1,   0,   1,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97,  99,
    107, 101, 116,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    123, 122, 240,  37,  91,  99, 161, 169,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b36ecfe36db7d4ef = b_b36ecfe36db7d4ef.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b36ecfe36db7d4ef[] = {
  &s_a9a1635b25f07a7b,
};
static const uint16_t m_b36ecfe36db7d4ef[] = {0};
static const uint16_t i_b36ecfe36db7d4ef[] = {0};
const ::capnp::_::RawSchema s_b36ecfe36db7d4ef = {
  0xb36ecfe36db7d4ef, b_b36ecfe36db7d4ef.words, 25, d_b36ecfe36db7d4ef, m_b36ecfe36db7d4ef,
  1, 1, i_b36ecfe36db7d4ef, nullptr, nullptr, { &s_b36ecfe36db7d4ef, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<115> b_a9a1635b25f07a7b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    123, 122, 240,  37,  91,  99, 161, 169,
     20,   0,   0,   0,   1,   0,   1,   0,
    239, 212, 183, 109, 227, 207, 110, 179,
      1,   0,   7,   0,   1,   0,   6,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97,  99,
    107, 101, 116,  46, 100,  97, 116,  97,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    180,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    177,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    188,   0,   0,   0,   2,   0,   1,   0,
      4,   0, 251, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   0,   0,   0,   3,   0,   1,   0,
    200,   0,   0,   0,   2,   0,   1,   0,
      5,   0, 250, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   0,   0,   0,   3,   0,   1,   0,
    212,   0,   0,   0,   2,   0,   1,   0,
    112, 117, 116,  82, 101, 113, 117, 101,
    115, 116,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    123,  59,  39, 224, 168, 133, 165, 238,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 117, 116,  82, 101, 115, 112, 111,
    110, 115, 101,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    104,  77, 243, 207, 245,  36, 152, 228,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 116,  82, 101, 113, 117, 101,
    115, 116,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      3,  22,  98, 208, 165, 128,  26, 165,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 116,  82, 101, 115, 112, 111,
    110, 115, 101,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      7,  42, 160, 242, 243,  61,  41, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 100, 109,  97,  83, 101, 116, 117,
    112,  82, 101, 113, 117, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     97, 187,  40, 233, 234, 160, 103, 235,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 100, 109,  97,  83, 101, 116, 117,
    112,  82, 101, 115, 112, 111, 110, 115,
    101,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     25, 153, 213, 133,  98, 216, 242, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a9a1635b25f07a7b = b_a9a1635b25f07a7b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a9a1635b25f07a7b[] = {
  &s_9c293df3f2a02a07,
  &s_a51a80a5d0621603,
  &s_b36ecfe36db7d4ef,
  &s_d8f2d86285d59919,
  &s_e49824f5cff34d68,
  &s_eb67a0eae928bb61,
  &s_eea585a8e0273b7b,
};
static const uint16_t m_a9a1635b25f07a7b[] = {2, 3, 0, 1, 4, 5};
static const uint16_t i_a9a1635b25f07a7b[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_a9a1635b25f07a7b = {
  0xa9a1635b25f07a7b, b_a9a1635b25f07a7b.words, 115, d_a9a1635b25f07a7b, m_a9a1635b25f07a7b,
  7, 6, i_a9a1635b25f07a7b, nullptr, nullptr, { &s_a9a1635b25f07a7b, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_9cc4c008dd1d858e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    142, 133,  29, 221,   8, 192, 196, 156,
     13,   0,   0,   0,   1,   0,   0,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97,  99,
    107, 101, 116, 115,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    112,  97,  99, 107, 101, 116, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    239, 212, 183, 109, 227, 207, 110, 179,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9cc4c008dd1d858e = b_9cc4c008dd1d858e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9cc4c008dd1d858e[] = {
  &s_b36ecfe36db7d4ef,
};
static const uint16_t m_9cc4c008dd1d858e[] = {0};
static const uint16_t i_9cc4c008dd1d858e[] = {0};
const ::capnp::_::RawSchema s_9cc4c008dd1d858e = {
  0x9cc4c008dd1d858e, b_9cc4c008dd1d858e.words, 36, d_9cc4c008dd1d858e, m_9cc4c008dd1d858e,
  1, 1, i_9cc4c008dd1d858e, nullptr, nullptr, { &s_9cc4c008dd1d858e, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// PutRequest
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t PutRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t PutRequest::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind PutRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PutRequest::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// PutResponse
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t PutResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t PutResponse::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind PutResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PutResponse::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// GetRequest
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t GetRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t GetRequest::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind GetRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetRequest::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// GetResponse
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t GetResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t GetResponse::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind GetResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetResponse::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// RdmaSetupRequest
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t RdmaSetupRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t RdmaSetupRequest::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind RdmaSetupRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RdmaSetupRequest::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// RdmaSetupResponse
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t RdmaSetupResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t RdmaSetupResponse::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind RdmaSetupResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RdmaSetupResponse::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Packet
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Packet::_capnpPrivate::dataWordSize;
constexpr uint16_t Packet::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Packet::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Packet::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Packet::Data
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Packet::Data::_capnpPrivate::dataWordSize;
constexpr uint16_t Packet::Data::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Packet::Data::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Packet::Data::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Packets
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Packets::_capnpPrivate::dataWordSize;
constexpr uint16_t Packets::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Packets::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Packets::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE



