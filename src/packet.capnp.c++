// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: packet.capnp

#include "packet.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<26> b_d1a6b028d23ecc19 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     25, 204,  62, 210,  40, 176, 166, 209,
     13,   0,   0,   0,   2,   0,   0,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  82, 101, 115,
    112, 111, 110, 115, 101,  84, 121, 112,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 107,   0,   0,   0,   0,   0,   0,
    105, 110, 118,  97, 108, 105, 100,   0, }
};
::capnp::word const* const bp_d1a6b028d23ecc19 = b_d1a6b028d23ecc19.words;
#if !CAPNP_LITE
static const uint16_t m_d1a6b028d23ecc19[] = {1, 0};
const ::capnp::_::RawSchema s_d1a6b028d23ecc19 = {
  0xd1a6b028d23ecc19, b_d1a6b028d23ecc19.words, 26, nullptr, m_d1a6b028d23ecc19,
  0, 2, nullptr, nullptr, nullptr, { &s_d1a6b028d23ecc19, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(ResponseType_d1a6b028d23ecc19, d1a6b028d23ecc19);
static const ::capnp::_::AlignedData<47> b_eea585a8e0273b7b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    123,  59,  39, 224, 168, 133, 165, 238,
     13,   0,   0,   0,   1,   0,   0,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  80, 117, 116,
     82, 101, 113, 117, 101, 115, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_eea585a8e0273b7b = b_eea585a8e0273b7b.words;
#if !CAPNP_LITE
static const uint16_t m_eea585a8e0273b7b[] = {0, 1};
static const uint16_t i_eea585a8e0273b7b[] = {0, 1};
const ::capnp::_::RawSchema s_eea585a8e0273b7b = {
  0xeea585a8e0273b7b, b_eea585a8e0273b7b.words, 47, nullptr, m_eea585a8e0273b7b,
  0, 2, i_eea585a8e0273b7b, nullptr, nullptr, { &s_eea585a8e0273b7b, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_e49824f5cff34d68 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    104,  77, 243, 207, 245,  36, 152, 228,
     13,   0,   0,   0,   1,   0,   1,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  80, 117, 116,
     82, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     25, 204,  62, 210,  40, 176, 166, 209,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e49824f5cff34d68 = b_e49824f5cff34d68.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e49824f5cff34d68[] = {
  &s_d1a6b028d23ecc19,
};
static const uint16_t m_e49824f5cff34d68[] = {0};
static const uint16_t i_e49824f5cff34d68[] = {0};
const ::capnp::_::RawSchema s_e49824f5cff34d68 = {
  0xe49824f5cff34d68, b_e49824f5cff34d68.words, 34, d_e49824f5cff34d68, m_e49824f5cff34d68,
  1, 1, i_e49824f5cff34d68, nullptr, nullptr, { &s_e49824f5cff34d68, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_a51a80a5d0621603 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      3,  22,  98, 208, 165, 128,  26, 165,
     13,   0,   0,   0,   1,   0,   0,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  71, 101, 116,
     82, 101, 113, 117, 101, 115, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a51a80a5d0621603 = b_a51a80a5d0621603.words;
#if !CAPNP_LITE
static const uint16_t m_a51a80a5d0621603[] = {0};
static const uint16_t i_a51a80a5d0621603[] = {0};
const ::capnp::_::RawSchema s_a51a80a5d0621603 = {
  0xa51a80a5d0621603, b_a51a80a5d0621603.words, 32, nullptr, m_a51a80a5d0621603,
  0, 1, i_a51a80a5d0621603, nullptr, nullptr, { &s_a51a80a5d0621603, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_9c293df3f2a02a07 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      7,  42, 160, 242, 243,  61,  41, 156,
     13,   0,   0,   0,   1,   0,   1,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  71, 101, 116,
     82, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     25, 204,  62, 210,  40, 176, 166, 209,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9c293df3f2a02a07 = b_9c293df3f2a02a07.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9c293df3f2a02a07[] = {
  &s_d1a6b028d23ecc19,
};
static const uint16_t m_9c293df3f2a02a07[] = {0, 1};
static const uint16_t i_9c293df3f2a02a07[] = {0, 1};
const ::capnp::_::RawSchema s_9c293df3f2a02a07 = {
  0x9c293df3f2a02a07, b_9c293df3f2a02a07.words, 49, d_9c293df3f2a02a07, m_9c293df3f2a02a07,
  1, 2, i_9c293df3f2a02a07, nullptr, nullptr, { &s_9c293df3f2a02a07, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// PutRequest
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t PutRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t PutRequest::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind PutRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PutRequest::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// PutResponse
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t PutResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t PutResponse::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind PutResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PutResponse::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// GetRequest
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t GetRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t GetRequest::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind GetRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetRequest::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// GetResponse
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t GetResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t GetResponse::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind GetResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetResponse::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE



