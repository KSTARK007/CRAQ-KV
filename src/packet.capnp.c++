// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: packet.capnp

#include "packet.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<26> b_d1a6b028d23ecc19 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     25, 204,  62, 210,  40, 176, 166, 209,
     13,   0,   0,   0,   2,   0,   0,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  82, 101, 115,
    112, 111, 110, 115, 101,  84, 121, 112,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 107,   0,   0,   0,   0,   0,   0,
    105, 110, 118,  97, 108, 105, 100,   0, }
};
::capnp::word const* const bp_d1a6b028d23ecc19 = b_d1a6b028d23ecc19.words;
#if !CAPNP_LITE
static const uint16_t m_d1a6b028d23ecc19[] = {1, 0};
const ::capnp::_::RawSchema s_d1a6b028d23ecc19 = {
  0xd1a6b028d23ecc19, b_d1a6b028d23ecc19.words, 26, nullptr, m_d1a6b028d23ecc19,
  0, 2, nullptr, nullptr, nullptr, { &s_d1a6b028d23ecc19, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(ResponseType_d1a6b028d23ecc19, d1a6b028d23ecc19);
static const ::capnp::_::AlignedData<47> b_eea585a8e0273b7b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    123,  59,  39, 224, 168, 133, 165, 238,
     13,   0,   0,   0,   1,   0,   0,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  80, 117, 116,
     82, 101, 113, 117, 101, 115, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_eea585a8e0273b7b = b_eea585a8e0273b7b.words;
#if !CAPNP_LITE
static const uint16_t m_eea585a8e0273b7b[] = {0, 1};
static const uint16_t i_eea585a8e0273b7b[] = {0, 1};
const ::capnp::_::RawSchema s_eea585a8e0273b7b = {
  0xeea585a8e0273b7b, b_eea585a8e0273b7b.words, 47, nullptr, m_eea585a8e0273b7b,
  0, 2, i_eea585a8e0273b7b, nullptr, nullptr, { &s_eea585a8e0273b7b, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_e49824f5cff34d68 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    104,  77, 243, 207, 245,  36, 152, 228,
     13,   0,   0,   0,   1,   0,   1,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  80, 117, 116,
     82, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     25, 204,  62, 210,  40, 176, 166, 209,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e49824f5cff34d68 = b_e49824f5cff34d68.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e49824f5cff34d68[] = {
  &s_d1a6b028d23ecc19,
};
static const uint16_t m_e49824f5cff34d68[] = {0};
static const uint16_t i_e49824f5cff34d68[] = {0};
const ::capnp::_::RawSchema s_e49824f5cff34d68 = {
  0xe49824f5cff34d68, b_e49824f5cff34d68.words, 34, d_e49824f5cff34d68, m_e49824f5cff34d68,
  1, 1, i_e49824f5cff34d68, nullptr, nullptr, { &s_e49824f5cff34d68, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_a51a80a5d0621603 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      3,  22,  98, 208, 165, 128,  26, 165,
     13,   0,   0,   0,   1,   0,   0,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  71, 101, 116,
     82, 101, 113, 117, 101, 115, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a51a80a5d0621603 = b_a51a80a5d0621603.words;
#if !CAPNP_LITE
static const uint16_t m_a51a80a5d0621603[] = {0};
static const uint16_t i_a51a80a5d0621603[] = {0};
const ::capnp::_::RawSchema s_a51a80a5d0621603 = {
  0xa51a80a5d0621603, b_a51a80a5d0621603.words, 32, nullptr, m_a51a80a5d0621603,
  0, 1, i_a51a80a5d0621603, nullptr, nullptr, { &s_a51a80a5d0621603, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_9c293df3f2a02a07 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      7,  42, 160, 242, 243,  61,  41, 156,
     13,   0,   0,   0,   1,   0,   1,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  71, 101, 116,
     82, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     25, 204,  62, 210,  40, 176, 166, 209,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9c293df3f2a02a07 = b_9c293df3f2a02a07.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9c293df3f2a02a07[] = {
  &s_d1a6b028d23ecc19,
};
static const uint16_t m_9c293df3f2a02a07[] = {0, 1};
static const uint16_t i_9c293df3f2a02a07[] = {0, 1};
const ::capnp::_::RawSchema s_9c293df3f2a02a07 = {
  0x9c293df3f2a02a07, b_9c293df3f2a02a07.words, 49, d_9c293df3f2a02a07, m_9c293df3f2a02a07,
  1, 2, i_9c293df3f2a02a07, nullptr, nullptr, { &s_9c293df3f2a02a07, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_eb67a0eae928bb61 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     97, 187,  40, 233, 234, 160, 103, 235,
     13,   0,   0,   0,   1,   0,   3,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  82, 100, 109,
     97,  83, 101, 116, 117, 112,  82, 101,
    113, 117, 101, 115, 116,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    109,  97,  99, 104, 105, 110, 101,  73,
    110, 100, 101, 120,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 114, 116,  65, 100, 100,
    114, 101, 115, 115,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 122, 101,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_eb67a0eae928bb61 = b_eb67a0eae928bb61.words;
#if !CAPNP_LITE
static const uint16_t m_eb67a0eae928bb61[] = {0, 2, 1};
static const uint16_t i_eb67a0eae928bb61[] = {0, 1, 2};
const ::capnp::_::RawSchema s_eb67a0eae928bb61 = {
  0xeb67a0eae928bb61, b_eb67a0eae928bb61.words, 65, nullptr, m_eb67a0eae928bb61,
  0, 3, i_eb67a0eae928bb61, nullptr, nullptr, { &s_eb67a0eae928bb61, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_d8f2d86285d59919 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     25, 153, 213, 133,  98, 216, 242, 216,
     13,   0,   0,   0,   1,   0,   1,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  82, 100, 109,
     97,  83, 101, 116, 117, 112,  82, 101,
    115, 112, 111, 110, 115, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     25, 204,  62, 210,  40, 176, 166, 209,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d8f2d86285d59919 = b_d8f2d86285d59919.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d8f2d86285d59919[] = {
  &s_d1a6b028d23ecc19,
};
static const uint16_t m_d8f2d86285d59919[] = {0};
static const uint16_t i_d8f2d86285d59919[] = {0};
const ::capnp::_::RawSchema s_d8f2d86285d59919 = {
  0xd8f2d86285d59919, b_d8f2d86285d59919.words, 34, d_d8f2d86285d59919, m_d8f2d86285d59919,
  1, 1, i_d8f2d86285d59919, nullptr, nullptr, { &s_d8f2d86285d59919, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_d92927b00c6d5396 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    150,  83, 109,  12, 176,  39,  41, 217,
     13,   0,   0,   0,   1,   0,   2,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  67, 108, 105,
    101, 110, 116,  83, 121, 110,  99,  82,
    101, 113, 117, 101, 115, 116,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     25, 204,  62, 210,  40, 176, 166, 209,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 100, 101, 120,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d92927b00c6d5396 = b_d92927b00c6d5396.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d92927b00c6d5396[] = {
  &s_d1a6b028d23ecc19,
};
static const uint16_t m_d92927b00c6d5396[] = {1, 0};
static const uint16_t i_d92927b00c6d5396[] = {0, 1};
const ::capnp::_::RawSchema s_d92927b00c6d5396 = {
  0xd92927b00c6d5396, b_d92927b00c6d5396.words, 49, d_d92927b00c6d5396, m_d92927b00c6d5396,
  1, 2, i_d92927b00c6d5396, nullptr, nullptr, { &s_d92927b00c6d5396, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_9736b56e253cba13 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     19, 186,  60,  37, 110, 181,  54, 151,
     13,   0,   0,   0,   1,   0,   1,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  67, 108, 105,
    101, 110, 116,  83, 121, 110,  99,  82,
    101, 115, 112, 111, 110, 115, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     25, 204,  62, 210,  40, 176, 166, 209,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9736b56e253cba13 = b_9736b56e253cba13.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9736b56e253cba13[] = {
  &s_d1a6b028d23ecc19,
};
static const uint16_t m_9736b56e253cba13[] = {0};
static const uint16_t i_9736b56e253cba13[] = {0};
const ::capnp::_::RawSchema s_9736b56e253cba13 = {
  0x9736b56e253cba13, b_9736b56e253cba13.words, 34, d_9736b56e253cba13, m_9736b56e253cba13,
  1, 1, i_9736b56e253cba13, nullptr, nullptr, { &s_9736b56e253cba13, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<81> b_d74e917dbcd881cb = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    203, 129, 216, 188, 125, 145,  78, 215,
     13,   0,   0,   0,   1,   0,   2,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  83, 105, 110,
    103, 108, 101, 116, 111, 110,  80, 117,
    116,  82, 101, 113, 117, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 110, 103, 108, 101, 116, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 111, 114, 119,  97, 114, 100,  67,
    111, 117, 110, 116,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d74e917dbcd881cb = b_d74e917dbcd881cb.words;
#if !CAPNP_LITE
static const uint16_t m_d74e917dbcd881cb[] = {3, 0, 2, 1};
static const uint16_t i_d74e917dbcd881cb[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_d74e917dbcd881cb = {
  0xd74e917dbcd881cb, b_d74e917dbcd881cb.words, 81, nullptr, m_d74e917dbcd881cb,
  0, 4, i_d74e917dbcd881cb, nullptr, nullptr, { &s_d74e917dbcd881cb, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_f90a05fd026809ad = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    173,   9, 104,   2, 253,   5,  10, 249,
     13,   0,   0,   0,   1,   0,   0,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  68, 101, 108,
    101, 116, 101,  82, 101, 113, 117, 101,
    115, 116,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f90a05fd026809ad = b_f90a05fd026809ad.words;
#if !CAPNP_LITE
static const uint16_t m_f90a05fd026809ad[] = {0};
static const uint16_t i_f90a05fd026809ad[] = {0};
const ::capnp::_::RawSchema s_f90a05fd026809ad = {
  0xf90a05fd026809ad, b_f90a05fd026809ad.words, 33, nullptr, m_f90a05fd026809ad,
  0, 1, i_f90a05fd026809ad, nullptr, nullptr, { &s_f90a05fd026809ad, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_fb62f49632f7d8be = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    190, 216, 247,  50, 150, 244,  98, 251,
     13,   0,   0,   0,   1,   0,   0,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  70,  97, 108,
    108,  98,  97,  99, 107,  71, 101, 116,
     82, 101, 113, 117, 101, 115, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fb62f49632f7d8be = b_fb62f49632f7d8be.words;
#if !CAPNP_LITE
static const uint16_t m_fb62f49632f7d8be[] = {0};
static const uint16_t i_fb62f49632f7d8be[] = {0};
const ::capnp::_::RawSchema s_fb62f49632f7d8be = {
  0xfb62f49632f7d8be, b_fb62f49632f7d8be.words, 33, nullptr, m_fb62f49632f7d8be,
  0, 1, i_fb62f49632f7d8be, nullptr, nullptr, { &s_fb62f49632f7d8be, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<114> b_cd9e95393d3f997d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    125, 153,  63,  61,  57, 149, 158, 205,
     13,   0,   0,   0,   1,   0,   3,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  70,  97, 108,
    108,  98,  97,  99, 107,  71, 101, 116,
     82, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   0,   0,   0,   3,   0,   1,   0,
    184,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,  16,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   0,   0,   0,   3,   0,   1,   0,
    200,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     25, 204,  62, 210,  40, 176, 166, 209,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 101, 121,  86,  97, 108, 117, 101,
     80, 116, 114,  79, 102, 102, 115, 101,
    116,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 110, 103, 108, 101, 116, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 111, 114, 119,  97, 114, 100,  67,
    111, 117, 110, 116,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cd9e95393d3f997d = b_cd9e95393d3f997d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cd9e95393d3f997d[] = {
  &s_d1a6b028d23ecc19,
};
static const uint16_t m_cd9e95393d3f997d[] = {5, 1, 3, 0, 4, 2};
static const uint16_t i_cd9e95393d3f997d[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_cd9e95393d3f997d = {
  0xcd9e95393d3f997d, b_cd9e95393d3f997d.words, 114, d_cd9e95393d3f997d, m_cd9e95393d3f997d,
  1, 6, i_cd9e95393d3f997d, nullptr, nullptr, { &s_cd9e95393d3f997d, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_ea4ba10b167d66a7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    167, 102, 125,  22,  11, 161,  75, 234,
     13,   0,   0,   0,   1,   0,   1,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  83, 104,  97,
    114, 101, 100,  76, 111, 103,  70, 111,
    114, 119,  97, 114, 100,  82, 101, 113,
    117, 101, 115, 116,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,  97, 115, 104,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ea4ba10b167d66a7 = b_ea4ba10b167d66a7.words;
#if !CAPNP_LITE
static const uint16_t m_ea4ba10b167d66a7[] = {1, 0};
static const uint16_t i_ea4ba10b167d66a7[] = {0, 1};
const ::capnp::_::RawSchema s_ea4ba10b167d66a7 = {
  0xea4ba10b167d66a7, b_ea4ba10b167d66a7.words, 49, nullptr, m_ea4ba10b167d66a7,
  0, 2, i_ea4ba10b167d66a7, nullptr, nullptr, { &s_ea4ba10b167d66a7, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_dc828176e706e6f6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    246, 230,   6, 231, 118, 129, 130, 220,
     13,   0,   0,   0,   1,   0,   2,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  83, 104,  97,
    114, 101, 100,  76, 111, 103,  70, 111,
    114, 119,  97, 114, 100,  82, 101, 115,
    112, 111, 110, 115, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     25, 204,  62, 210,  40, 176, 166, 209,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,  97, 115, 104,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_dc828176e706e6f6 = b_dc828176e706e6f6.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_dc828176e706e6f6[] = {
  &s_d1a6b028d23ecc19,
};
static const uint16_t m_dc828176e706e6f6[] = {1, 0};
static const uint16_t i_dc828176e706e6f6[] = {0, 1};
const ::capnp::_::RawSchema s_dc828176e706e6f6 = {
  0xdc828176e706e6f6, b_dc828176e706e6f6.words, 50, d_dc828176e706e6f6, m_dc828176e706e6f6,
  1, 2, i_dc828176e706e6f6, nullptr, nullptr, { &s_dc828176e706e6f6, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<64> b_f7316cad69abb0d4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    212, 176, 171, 105, 173, 108,  49, 247,
     13,   0,   0,   0,   1,   0,   1,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  83, 104,  97,
    114, 101, 100,  76, 111, 103,  80, 117,
    116,  82, 101, 113, 117, 101, 115, 116,
     69,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,  97, 115, 104,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f7316cad69abb0d4 = b_f7316cad69abb0d4.words;
#if !CAPNP_LITE
static const uint16_t m_f7316cad69abb0d4[] = {2, 0, 1};
static const uint16_t i_f7316cad69abb0d4[] = {0, 1, 2};
const ::capnp::_::RawSchema s_f7316cad69abb0d4 = {
  0xf7316cad69abb0d4, b_f7316cad69abb0d4.words, 64, nullptr, m_f7316cad69abb0d4,
  0, 3, i_f7316cad69abb0d4, nullptr, nullptr, { &s_f7316cad69abb0d4, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_ff39fc1686c4831e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     30, 131, 196, 134,  22, 252,  57, 255,
     13,   0,   0,   0,   1,   0,   0,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  83, 104,  97,
    114, 101, 100,  76, 111, 103,  80, 117,
    116,  82, 101, 113, 117, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    101,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    212, 176, 171, 105, 173, 108,  49, 247,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ff39fc1686c4831e = b_ff39fc1686c4831e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ff39fc1686c4831e[] = {
  &s_f7316cad69abb0d4,
};
static const uint16_t m_ff39fc1686c4831e[] = {0};
static const uint16_t i_ff39fc1686c4831e[] = {0};
const ::capnp::_::RawSchema s_ff39fc1686c4831e = {
  0xff39fc1686c4831e, b_ff39fc1686c4831e.words, 38, d_ff39fc1686c4831e, m_ff39fc1686c4831e,
  1, 1, i_ff39fc1686c4831e, nullptr, nullptr, { &s_ff39fc1686c4831e, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_cf45ff3a7333fd95 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    149, 253,  51, 115,  58, 255,  69, 207,
     13,   0,   0,   0,   1,   0,   2,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  83, 104,  97,
    114, 101, 100,  76, 111, 103,  80, 117,
    116,  82, 101, 115, 112, 111, 110, 115,
    101,  69,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    105, 110, 100, 101, 120,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,  97, 115, 104,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cf45ff3a7333fd95 = b_cf45ff3a7333fd95.words;
#if !CAPNP_LITE
static const uint16_t m_cf45ff3a7333fd95[] = {1, 0};
static const uint16_t i_cf45ff3a7333fd95[] = {0, 1};
const ::capnp::_::RawSchema s_cf45ff3a7333fd95 = {
  0xcf45ff3a7333fd95, b_cf45ff3a7333fd95.words, 49, nullptr, m_cf45ff3a7333fd95,
  0, 2, i_cf45ff3a7333fd95, nullptr, nullptr, { &s_cf45ff3a7333fd95, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_867987e2b2e8dc81 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    129, 220, 232, 178, 226, 135, 121, 134,
     13,   0,   0,   0,   1,   0,   0,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  83, 104,  97,
    114, 101, 100,  76, 111, 103,  80, 117,
    116,  82, 101, 115, 112, 111, 110, 115,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    101,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    149, 253,  51, 115,  58, 255,  69, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_867987e2b2e8dc81 = b_867987e2b2e8dc81.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_867987e2b2e8dc81[] = {
  &s_cf45ff3a7333fd95,
};
static const uint16_t m_867987e2b2e8dc81[] = {0};
static const uint16_t i_867987e2b2e8dc81[] = {0};
const ::capnp::_::RawSchema s_867987e2b2e8dc81 = {
  0x867987e2b2e8dc81, b_867987e2b2e8dc81.words, 38, d_867987e2b2e8dc81, m_867987e2b2e8dc81,
  1, 1, i_867987e2b2e8dc81, nullptr, nullptr, { &s_867987e2b2e8dc81, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_a95322c67cbf4d00 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      0,  77, 191, 124, 198,  34,  83, 169,
     13,   0,   0,   0,   1,   0,   0,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  83, 104,  97,
    114, 101, 100,  76, 111, 103,  69, 110,
    116, 114, 121,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a95322c67cbf4d00 = b_a95322c67cbf4d00.words;
#if !CAPNP_LITE
static const uint16_t m_a95322c67cbf4d00[] = {0, 1};
static const uint16_t i_a95322c67cbf4d00[] = {0, 1};
const ::capnp::_::RawSchema s_a95322c67cbf4d00 = {
  0xa95322c67cbf4d00, b_a95322c67cbf4d00.words, 48, nullptr, m_a95322c67cbf4d00,
  0, 2, i_a95322c67cbf4d00, nullptr, nullptr, { &s_a95322c67cbf4d00, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_b74c1186fa94955a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     90, 149, 148, 250, 134,  17,  76, 183,
     13,   0,   0,   0,   1,   0,   1,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  83, 104,  97,
    114, 101, 100,  76, 111, 103,  71, 101,
    116,  82, 101, 113, 117, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    105, 110, 100, 101, 120,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b74c1186fa94955a = b_b74c1186fa94955a.words;
#if !CAPNP_LITE
static const uint16_t m_b74c1186fa94955a[] = {0};
static const uint16_t i_b74c1186fa94955a[] = {0};
const ::capnp::_::RawSchema s_b74c1186fa94955a = {
  0xb74c1186fa94955a, b_b74c1186fa94955a.words, 34, nullptr, m_b74c1186fa94955a,
  0, 1, i_b74c1186fa94955a, nullptr, nullptr, { &s_b74c1186fa94955a, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<69> b_83b7ecc25270e0af = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    175, 224, 112,  82, 194, 236, 183, 131,
     13,   0,   0,   0,   1,   0,   2,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  83, 104,  97,
    114, 101, 100,  76, 111, 103,  71, 101,
    116,  82, 101, 115, 112, 111, 110, 115,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
    105, 110, 100, 101, 120,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 103,  73, 110, 100, 101, 120,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,  77, 191, 124, 198,  34,  83, 169,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_83b7ecc25270e0af = b_83b7ecc25270e0af.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_83b7ecc25270e0af[] = {
  &s_a95322c67cbf4d00,
};
static const uint16_t m_83b7ecc25270e0af[] = {2, 0, 1};
static const uint16_t i_83b7ecc25270e0af[] = {0, 1, 2};
const ::capnp::_::RawSchema s_83b7ecc25270e0af = {
  0x83b7ecc25270e0af, b_83b7ecc25270e0af.words, 69, d_83b7ecc25270e0af, m_83b7ecc25270e0af,
  1, 3, i_83b7ecc25270e0af, nullptr, nullptr, { &s_83b7ecc25270e0af, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<82> b_d66ee313fb69e7e4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    228, 231, 105, 251,  19, 227, 110, 214,
     13,   0,   0,   0,   1,   0,   2,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  67, 114,  97,
    113,  70, 111, 114, 119,  97, 114, 100,
     80, 114, 111, 112,  97, 103,  97, 116,
    101,  82, 101, 113, 117, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 108, 105, 101, 110, 116,  73, 110,
    100, 101, 120,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 108, 105, 101, 110, 116,  80, 111,
    114, 116,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d66ee313fb69e7e4 = b_d66ee313fb69e7e4.words;
#if !CAPNP_LITE
static const uint16_t m_d66ee313fb69e7e4[] = {2, 3, 0, 1};
static const uint16_t i_d66ee313fb69e7e4[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_d66ee313fb69e7e4 = {
  0xd66ee313fb69e7e4, b_d66ee313fb69e7e4.words, 82, nullptr, m_d66ee313fb69e7e4,
  0, 4, i_d66ee313fb69e7e4, nullptr, nullptr, { &s_d66ee313fb69e7e4, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<82> b_9e5b01cd92a83c05 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      5,  60, 168, 146, 205,   1,  91, 158,
     13,   0,   0,   0,   1,   0,   2,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  67, 114,  97,
    113,  66,  97,  99, 107, 119,  97, 114,
    100,  80, 114, 111, 112,  97, 103,  97,
    116, 101,  82, 101, 113, 117, 101, 115,
    116,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 108, 105, 101, 110, 116,  73, 110,
    100, 101, 120,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 108, 105, 101, 110, 116,  80, 111,
    114, 116,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9e5b01cd92a83c05 = b_9e5b01cd92a83c05.words;
#if !CAPNP_LITE
static const uint16_t m_9e5b01cd92a83c05[] = {2, 3, 0, 1};
static const uint16_t i_9e5b01cd92a83c05[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_9e5b01cd92a83c05 = {
  0x9e5b01cd92a83c05, b_9e5b01cd92a83c05.words, 82, nullptr, m_9e5b01cd92a83c05,
  0, 4, i_9e5b01cd92a83c05, nullptr, nullptr, { &s_9e5b01cd92a83c05, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<25> b_b36ecfe36db7d4ef = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    239, 212, 183, 109, 227, 207, 110, 179,
     13,   0,   0,   0,   1,   0,   1,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97,  99,
    107, 101, 116,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    123, 122, 240,  37,  91,  99, 161, 169,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b36ecfe36db7d4ef = b_b36ecfe36db7d4ef.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b36ecfe36db7d4ef[] = {
  &s_a9a1635b25f07a7b,
};
static const uint16_t m_b36ecfe36db7d4ef[] = {0};
static const uint16_t i_b36ecfe36db7d4ef[] = {0};
const ::capnp::_::RawSchema s_b36ecfe36db7d4ef = {
  0xb36ecfe36db7d4ef, b_b36ecfe36db7d4ef.words, 25, d_b36ecfe36db7d4ef, m_b36ecfe36db7d4ef,
  1, 1, i_b36ecfe36db7d4ef, nullptr, nullptr, { &s_b36ecfe36db7d4ef, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<355> b_a9a1635b25f07a7b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    123, 122, 240,  37,  91,  99, 161, 169,
     20,   0,   0,   0,   1,   0,   1,   0,
    239, 212, 183, 109, 227, 207, 110, 179,
      1,   0,   7,   0,   1,   0,  20,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 103,   4,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97,  99,
    107, 101, 116,  46, 100,  97, 116,  97,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   2,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   2,   0,   0,   3,   0,   1,   0,
     44,   2,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   2,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   2,   0,   0,   3,   0,   1,   0,
     52,   2,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   2,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   2,   0,   0,   3,   0,   1,   0,
     60,   2,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57,   2,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   2,   0,   0,   3,   0,   1,   0,
     68,   2,   0,   0,   2,   0,   1,   0,
      4,   0, 251, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   2,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   2,   0,   0,   3,   0,   1,   0,
     80,   2,   0,   0,   2,   0,   1,   0,
      5,   0, 250, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   2,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   2,   0,   0,   3,   0,   1,   0,
     92,   2,   0,   0,   2,   0,   1,   0,
      6,   0, 249, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   2,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   2,   0,   0,   3,   0,   1,   0,
    104,   2,   0,   0,   2,   0,   1,   0,
      7,   0, 248, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   2,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   2,   0,   0,   3,   0,   1,   0,
    116,   2,   0,   0,   2,   0,   1,   0,
      8,   0, 247, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   2,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   2,   0,   0,   3,   0,   1,   0,
    128,   2,   0,   0,   2,   0,   1,   0,
      9,   0, 246, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   2,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   2,   0,   0,   3,   0,   1,   0,
    136,   2,   0,   0,   2,   0,   1,   0,
     10,   0, 245, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   2,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   2,   0,   0,   3,   0,   1,   0,
    148,   2,   0,   0,   2,   0,   1,   0,
     11,   0, 244, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   2,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   2,   0,   0,   3,   0,   1,   0,
    160,   2,   0,   0,   2,   0,   1,   0,
     12,   0, 243, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  12,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   2,   0,   0, 194,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   2,   0,   0,   3,   0,   1,   0,
    172,   2,   0,   0,   2,   0,   1,   0,
     13,   0, 242, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  13,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   2,   0,   0, 202,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   2,   0,   0,   3,   0,   1,   0,
    188,   2,   0,   0,   2,   0,   1,   0,
     14,   0, 241, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  14,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   2,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   2,   0,   0,   3,   0,   1,   0,
    200,   2,   0,   0,   2,   0,   1,   0,
     15,   0, 240, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  15,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   2,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   2,   0,   0,   3,   0,   1,   0,
    212,   2,   0,   0,   2,   0,   1,   0,
     16,   0, 239, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  16,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   2,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   2,   0,   0,   3,   0,   1,   0,
    224,   2,   0,   0,   2,   0,   1,   0,
     17,   0, 238, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  17,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   2,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    224,   2,   0,   0,   3,   0,   1,   0,
    236,   2,   0,   0,   2,   0,   1,   0,
     18,   0, 237, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   2,   0,   0, 226,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    240,   2,   0,   0,   3,   0,   1,   0,
    252,   2,   0,   0,   2,   0,   1,   0,
     19,   0, 236, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  19,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    249,   2,   0,   0, 234,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   3,   0,   0,   3,   0,   1,   0,
     12,   3,   0,   0,   2,   0,   1,   0,
    112, 117, 116,  82, 101, 113, 117, 101,
    115, 116,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    123,  59,  39, 224, 168, 133, 165, 238,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 117, 116,  82, 101, 115, 112, 111,
    110, 115, 101,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    104,  77, 243, 207, 245,  36, 152, 228,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 116,  82, 101, 113, 117, 101,
    115, 116,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      3,  22,  98, 208, 165, 128,  26, 165,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 116,  82, 101, 115, 112, 111,
    110, 115, 101,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      7,  42, 160, 242, 243,  61,  41, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 100, 109,  97,  83, 101, 116, 117,
    112,  82, 101, 113, 117, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     97, 187,  40, 233, 234, 160, 103, 235,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 100, 109,  97,  83, 101, 116, 117,
    112,  82, 101, 115, 112, 111, 110, 115,
    101,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     25, 153, 213, 133,  98, 216, 242, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 108, 105, 101, 110, 116,  83, 121,
    110,  99,  82, 101, 113, 117, 101, 115,
    116,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    150,  83, 109,  12, 176,  39,  41, 217,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 108, 105, 101, 110, 116,  83, 121,
    110,  99,  82, 101, 115, 112, 111, 110,
    115, 101,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     19, 186,  60,  37, 110, 181,  54, 151,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 110, 103, 108, 101, 116, 111,
    110,  80, 117, 116,  82, 101, 113, 117,
    101, 115, 116,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    203, 129, 216, 188, 125, 145,  78, 215,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 108, 101, 116, 101,  82, 101,
    113, 117, 101, 115, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    173,   9, 104,   2, 253,   5,  10, 249,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  97, 108, 108,  98,  97,  99, 107,
     71, 101, 116,  82, 101, 113, 117, 101,
    115, 116,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    190, 216, 247,  50, 150, 244,  98, 251,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  97, 108, 108,  98,  97,  99, 107,
     71, 101, 116,  82, 101, 115, 112, 111,
    110, 115, 101,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    125, 153,  63,  61,  57, 149, 158, 205,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 104,  97, 114, 101, 100,  76, 111,
    103,  70, 111, 114, 119,  97, 114, 100,
     82, 101, 113, 117, 101, 115, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    167, 102, 125,  22,  11, 161,  75, 234,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 104,  97, 114, 101, 100,  76, 111,
    103,  70, 111, 114, 119,  97, 114, 100,
     82, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    246, 230,   6, 231, 118, 129, 130, 220,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 104,  97, 114, 101, 100,  76, 111,
    103,  80, 117, 116,  82, 101, 113, 117,
    101, 115, 116,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     30, 131, 196, 134,  22, 252,  57, 255,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 104,  97, 114, 101, 100,  76, 111,
    103,  80, 117, 116,  82, 101, 115, 112,
    111, 110, 115, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    129, 220, 232, 178, 226, 135, 121, 134,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 104,  97, 114, 101, 100,  76, 111,
    103,  71, 101, 116,  82, 101, 113, 117,
    101, 115, 116,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     90, 149, 148, 250, 134,  17,  76, 183,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 104,  97, 114, 101, 100,  76, 111,
    103,  71, 101, 116,  82, 101, 115, 112,
    111, 110, 115, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    175, 224, 112,  82, 194, 236, 183, 131,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 114,  97, 113,  70, 111, 114, 119,
     97, 114, 100,  80, 114, 111, 112,  97,
    103,  97, 116, 101,  82, 101, 113, 117,
    101, 115, 116,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    228, 231, 105, 251,  19, 227, 110, 214,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 114,  97, 113,  66,  97,  99, 107,
    119,  97, 114, 100,  80, 114, 111, 112,
     97, 103,  97, 116, 101,  82, 101, 113,
    117, 101, 115, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      5,  60, 168, 146, 205,   1,  91, 158,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a9a1635b25f07a7b = b_a9a1635b25f07a7b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a9a1635b25f07a7b[] = {
  &s_83b7ecc25270e0af,
  &s_867987e2b2e8dc81,
  &s_9736b56e253cba13,
  &s_9c293df3f2a02a07,
  &s_9e5b01cd92a83c05,
  &s_a51a80a5d0621603,
  &s_b36ecfe36db7d4ef,
  &s_b74c1186fa94955a,
  &s_cd9e95393d3f997d,
  &s_d66ee313fb69e7e4,
  &s_d74e917dbcd881cb,
  &s_d8f2d86285d59919,
  &s_d92927b00c6d5396,
  &s_dc828176e706e6f6,
  &s_e49824f5cff34d68,
  &s_ea4ba10b167d66a7,
  &s_eb67a0eae928bb61,
  &s_eea585a8e0273b7b,
  &s_f90a05fd026809ad,
  &s_fb62f49632f7d8be,
  &s_ff39fc1686c4831e,
};
static const uint16_t m_a9a1635b25f07a7b[] = {6, 7, 19, 18, 9, 10, 11, 2, 3, 0, 1, 4, 5, 12, 13, 16, 17, 14, 15, 8};
static const uint16_t i_a9a1635b25f07a7b[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19};
const ::capnp::_::RawSchema s_a9a1635b25f07a7b = {
  0xa9a1635b25f07a7b, b_a9a1635b25f07a7b.words, 355, d_a9a1635b25f07a7b, m_a9a1635b25f07a7b,
  21, 20, i_a9a1635b25f07a7b, nullptr, nullptr, { &s_a9a1635b25f07a7b, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_9cc4c008dd1d858e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    142, 133,  29, 221,   8, 192, 196, 156,
     13,   0,   0,   0,   1,   0,   0,   0,
     54,  11, 191,  20,  31, 173, 185, 219,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97,  99,
    107, 101, 116, 115,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    112,  97,  99, 107, 101, 116, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    239, 212, 183, 109, 227, 207, 110, 179,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9cc4c008dd1d858e = b_9cc4c008dd1d858e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9cc4c008dd1d858e[] = {
  &s_b36ecfe36db7d4ef,
};
static const uint16_t m_9cc4c008dd1d858e[] = {0};
static const uint16_t i_9cc4c008dd1d858e[] = {0};
const ::capnp::_::RawSchema s_9cc4c008dd1d858e = {
  0x9cc4c008dd1d858e, b_9cc4c008dd1d858e.words, 36, d_9cc4c008dd1d858e, m_9cc4c008dd1d858e,
  1, 1, i_9cc4c008dd1d858e, nullptr, nullptr, { &s_9cc4c008dd1d858e, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// PutRequest
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t PutRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t PutRequest::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind PutRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PutRequest::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// PutResponse
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t PutResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t PutResponse::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind PutResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PutResponse::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// GetRequest
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t GetRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t GetRequest::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind GetRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetRequest::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// GetResponse
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t GetResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t GetResponse::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind GetResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetResponse::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// RdmaSetupRequest
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t RdmaSetupRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t RdmaSetupRequest::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind RdmaSetupRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RdmaSetupRequest::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// RdmaSetupResponse
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t RdmaSetupResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t RdmaSetupResponse::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind RdmaSetupResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RdmaSetupResponse::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// ClientSyncRequest
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t ClientSyncRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t ClientSyncRequest::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind ClientSyncRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ClientSyncRequest::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// ClientSyncResponse
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t ClientSyncResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t ClientSyncResponse::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind ClientSyncResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ClientSyncResponse::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// SingletonPutRequest
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t SingletonPutRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t SingletonPutRequest::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind SingletonPutRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SingletonPutRequest::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// DeleteRequest
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t DeleteRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t DeleteRequest::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind DeleteRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DeleteRequest::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// FallbackGetRequest
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t FallbackGetRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t FallbackGetRequest::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind FallbackGetRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FallbackGetRequest::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// FallbackGetResponse
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t FallbackGetResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t FallbackGetResponse::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind FallbackGetResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FallbackGetResponse::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// SharedLogForwardRequest
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t SharedLogForwardRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t SharedLogForwardRequest::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind SharedLogForwardRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SharedLogForwardRequest::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// SharedLogForwardResponse
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t SharedLogForwardResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t SharedLogForwardResponse::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind SharedLogForwardResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SharedLogForwardResponse::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// SharedLogPutRequestE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t SharedLogPutRequestE::_capnpPrivate::dataWordSize;
constexpr uint16_t SharedLogPutRequestE::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind SharedLogPutRequestE::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SharedLogPutRequestE::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// SharedLogPutRequest
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t SharedLogPutRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t SharedLogPutRequest::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind SharedLogPutRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SharedLogPutRequest::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// SharedLogPutResponseE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t SharedLogPutResponseE::_capnpPrivate::dataWordSize;
constexpr uint16_t SharedLogPutResponseE::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind SharedLogPutResponseE::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SharedLogPutResponseE::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// SharedLogPutResponse
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t SharedLogPutResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t SharedLogPutResponse::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind SharedLogPutResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SharedLogPutResponse::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// SharedLogEntry
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t SharedLogEntry::_capnpPrivate::dataWordSize;
constexpr uint16_t SharedLogEntry::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind SharedLogEntry::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SharedLogEntry::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// SharedLogGetRequest
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t SharedLogGetRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t SharedLogGetRequest::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind SharedLogGetRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SharedLogGetRequest::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// SharedLogGetResponse
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t SharedLogGetResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t SharedLogGetResponse::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind SharedLogGetResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SharedLogGetResponse::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CraqForwardPropagateRequest
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CraqForwardPropagateRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t CraqForwardPropagateRequest::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CraqForwardPropagateRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CraqForwardPropagateRequest::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CraqBackwardPropagateRequest
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CraqBackwardPropagateRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t CraqBackwardPropagateRequest::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CraqBackwardPropagateRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CraqBackwardPropagateRequest::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Packet
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Packet::_capnpPrivate::dataWordSize;
constexpr uint16_t Packet::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Packet::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Packet::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Packet::Data
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Packet::Data::_capnpPrivate::dataWordSize;
constexpr uint16_t Packet::Data::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Packet::Data::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Packet::Data::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Packets
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Packets::_capnpPrivate::dataWordSize;
constexpr uint16_t Packets::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Packets::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Packets::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE



